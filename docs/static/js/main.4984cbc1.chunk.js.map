{"version":3,"sources":["assets/logo.svg","components/YearBarChart.js","helpers.js","components/Donut.js","components/Info.tsx","components/YearSummary.js","components/Header.tsx","components/Modal.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledChartWrapper","styled","div","YearBarChart","p","data","setselectedMonth","selectedMonth","ref","useRef","map","month","date","length","useEffect","chart","d3","current","xScale","domain","e","i","range","padding","yScale","xAxis","tickFormat","d","slice","select","attr","call","yAxis","ticks","tickSize","remove","selectAll","join","bandwidth","transition","index","on","text","viewBox","transform","className","filterNewCars","car","attributes","donutColors","yearDonutColors","modelUnify","model","StyledDonutWrapper","StyledSvgWrapper","StyledDonutLabel","StyledDonutLabelText","span","StyledDonutLabelNumber","DonutChart","modelsCountObject","el","marka","reduce","val","modelsCountArray","Object","keys","key","name","value","sort","a","b","topFiveModelsCount","reduceData","color","data_ready","pie","arc","innerRadius","radius","outerRadius","prev","_groups","duration","attrTween","test","startAngle","endAngle","interpolate","t","style","Date","toLocaleDateString","year","backgroundColor","StyledInfo","Info","children","YearSummaryWrapper","StyledLegendWrapper","YearSummary","yearDataSum","flat","topTenModelsCount","svgElement","append","enter","StyledHeader","header","StyledLogoWrapper","Header","handleModalToogle","src","logo","alt","onClick","StyledModal","ModalBgd","CloseModal","ModalContent","infoModalContent","href","contactModalContent","Modal","modalType","closeModal","StyledMain","main","App","useState","setData","dataLoaded","setdataLoaded","showModal","modal","toogleModal","filteredData","DATA_2020","filter","Donut","find","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4984cbc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.54f53f5e.svg\";","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport styled from \"styled-components\";\n\nconst StyledChartWrapper = styled.div`\n  flex: 0 1 50%;\n  text-align: center;\n  max-width: 700px;\n  @media (max-width: 600px) {\n    padding: 20px;\n  }\n`;\n\nconst StyledFootNote = styled.p`\n  padding: 0 50px;\n  max-width: 600px;\n  font-size: 14px;\n  margin: 0 auto;\n  a {\n    word-break: break-all;\n  }\n  @media (max-width: 600px) {\n    padding: 10px;\n  }\n`;\n\nconst YearBarChart = ({ data, setselectedMonth, selectedMonth }) => {\n  const ref = useRef();\n\n  data = data.map((month) => ({ date: month.date, data: month.data.length }));\n\n  useEffect(() => {\n    const chart = d3.select(ref.current);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map((e, i) => e.date)) // min and max value in our data array\n      .range([0, 600]) // min and max value of our svg container\n      .padding(0.1);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([300, 0]) // min and max value in our data array\n      .range([0, 400]); // min and max value of our svg container\n\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickFormat((d) =>\n        d.length === 11 && d.slice(5, 6) === \"1\"\n          ? `1/${d.slice(-4)}`\n          : d.slice(5, -5)\n      );\n    chart.select(\".x-axis\").attr(\"transform\", \"translate(0,400)\").call(xAxis);\n\n    const yAxis = d3\n      .axisRight(yScale)\n      .ticks(3)\n      .tickSize(700)\n      .tickFormat((d) => (d ? `${d}` : ``));\n    chart.select(\".y-axis\").call(yAxis);\n    chart.select(\".y-axis .domain\").remove();\n    chart.selectAll(\".y-axis .tick text\").attr(\"x\", 630).attr(\"dy\", -4);\n\n    chart\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", (d) => xScale(d.date))\n      .attr(\"y\", (d) => yScale(d.data))\n      .attr(\"height\", (d) => yScale(300 - d.data))\n      .attr(\"width\", xScale.bandwidth())\n      .attr(\"rx\", 6)\n      .attr(\"ry\", 6)\n      .transition()\n      .attr(\"fill\", (d, index) =>\n        index + 1 === selectedMonth ? \"#343181\" : \"#6E6BC7\"\n      );\n\n    chart\n      .selectAll(\".bar\")\n      .on(\"click\", (d, index) => setselectedMonth(index + 1));\n\n    chart\n      .selectAll(\".bar-label\")\n      .data(data)\n      .join(\"text\")\n      .text((d) => (d.data > 280 ? `${d.data}*` : d.data))\n      .attr(\"class\", \"bar-label\")\n      .attr(\"x\", (d, index) => xScale(d.date) + (d.data > 100 ? 14 : 16))\n      .attr(\"y\", (d) => (d.data > 300 ? yScale(315) : yScale(d.data) + 20))\n      .attr(\"fill\", \"#fff\")\n      .attr(\"font-size\", 12);\n\n    chart\n      .selectAll(\".bar-footer\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"bar-footer\")\n      .attr(\"x\", (d, index) => xScale(d.date))\n      .attr(\"y\", 390)\n      .attr(\"height\", 10)\n      .attr(\"width\", xScale.bandwidth())\n      .transition()\n      .attr(\"fill\", (d, index) =>\n        index + 1 === selectedMonth ? \"#343181\" : \"#6E6BC7\"\n      );\n\n    const ticks = d3.selectAll(\".tick text\");\n\n    ticks.attr(\"class\", function (d, i) {\n      if (d.length === 11 && d.slice(5, 6) === \"1\") {\n        return \"full-year\";\n      } else {\n        return \"\";\n      }\n    });\n  }, [selectedMonth]);\n\n  return (\n    <StyledChartWrapper>\n      <svg viewBox=\"0 0 700 500\">\n        <g ref={ref} transform=\"translate(0,50)\">\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </g>\n      </svg>\n    </StyledChartWrapper>\n  );\n};\n\nexport default YearBarChart;\n","export const filterNewCars = (car) =>\n  car.attributes[\"pochodzenie-pojazdu\"] === \"NOWY ZAKUPIONY W KRAJU\" ||\n  car.attributes[\"pochodzenie-pojazdu\"] === \"NOWY IMPORT INDYW\";\n\nexport const donutColors = [\n  \"#5A43EE\",\n  \"#F68927\",\n  \"#F44B69\",\n  \"#5BDC63\",\n  \"tomato\",\n  \"gray\",\n];\n\nexport const yearDonutColors = [\n  \"#5A43EE\",\n  \"#F68927\",\n  \"#F44B69\",\n  \"#5BDC63\",\n  \"tomato\",\n  \"#DFC89F\",\n  \"#772875\",\n  \"#133739\",\n  \"#30913C\",\n  \"#A46A37\",\n  \"gray\",\n];\n\nexport const modelUnify = (model) => {\n  switch (model) {\n    case \"LEAF 40KWH\":\n      return \"LEAF\";\n    case \"TAYCAN TURBO\":\n      return \"TAYCAN\";\n    case \"TAYCAN 4S\":\n      return \"TAYCAN\";\n    case \"TAYCAN TURBO S\":\n      return \"TAYCAN\";\n    case \"I3S\":\n      return \"I3\";\n    case \"E-TRON 50\":\n      return \"E-TRON\";\n    case \"E-TRON 55\":\n      return \"E-TRON\";\n    case \"E-TRON SPORTBACK 55\":\n      return \"E-TRON\";\n    case \"E-TRON SPORTBACK 50\":\n      return \"E-TRON\";\n\n    default:\n      return model;\n  }\n};\n\nexport const getMonthName = (month) => {\n  return new Date(2020, month - 1, 1).toLocaleDateString(\"pl-pl\", {\n    year: \"numeric\",\n    month: \"long\",\n    //day: \"numeric\",\n  });\n};\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport { donutColors, getMonthName, modelUnify } from \"./../helpers\";\n\nimport styled from \"styled-components\";\n\nconst StyledDonutWrapper = styled.div`\n  flex: 0 1 50%;\n  padding-right: 30px;\n`;\n\nconst StyledSvgWrapper = styled.div`\n  max-width: 500px;\n  flex: auto;\n`;\n\nconst StyledDonutLabel = styled.p`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledDonutLabelText = styled.span``;\n\nconst StyledDonutLabelNumber = styled.span`\n  color: #fff;\n  text-align: center;\n  line-height: 35px;\n  display: inline-block;\n  width: 35px;\n  height: 35px;\n  vertical-align: middle;\n  margin-right: 10px;\n`;\n\nconst DonutChart = ({ data, selectedMonth }) => {\n  const ref = useRef();\n\n  const reduceData = (data) =>\n    data.reduce((a, b) => {\n      return a + b.value;\n    }, 0);\n\n  const modelsCountObject = data\n    .map(\n      (el) =>\n        `${\n          el.attributes.marka === \"BMW I\" ? \"BMW\" : el.attributes.marka\n        } ${modelUnify(el.attributes.model)}`\n    )\n    .reduce((map, val) => {\n      map[val] = (map[val] || 0) + 1;\n      return map;\n    }, {});\n\n  const modelsCountArray = Object.keys(modelsCountObject)\n    .map((key) => {\n      return {\n        name: key,\n        value: modelsCountObject[key],\n      };\n    })\n    .sort((a, b) => b.value - a.value);\n\n  const topFiveModelsCount = [\n    ...modelsCountArray.slice(0, 5),\n    { name: \"Pozostałe\", value: reduceData(modelsCountArray.slice(5)) },\n  ];\n\n  useEffect(() => {\n    const chart = d3.select(ref.current);\n\n    var radius = 200;\n\n    var color = d3\n      .scaleOrdinal()\n      .domain(topFiveModelsCount.map((d) => d.name))\n      .range(donutColors);\n\n    var pie = d3\n      .pie()\n      .value(function (d) {\n        return d.value.value;\n      })\n      .sort(null);\n    var data_ready = pie(d3.entries(topFiveModelsCount));\n\n    // The arc generator\n    var arc = d3\n      .arc()\n      .innerRadius(radius * 0.5) // This is the size of the donut hole\n      .outerRadius(radius * 0.8);\n\n    const prev = chart.selectAll(\"path\").select((d, i) => d)._groups[0];\n\n    chart\n      .selectAll(\".test\")\n      .data(data_ready)\n      .join(\"path\")\n      .attr(\"class\", \"test\")\n      .attr(\"d\", arc)\n      .transition()\n      .duration(750)\n      .attrTween(\"d\", function (d, i) {\n        const start = { startAngle: 0, endAngle: 0 };\n\n        const test = {\n          startAngle: prev[i]?.startAngle,\n          endAngle: prev[i]?.endAngle,\n        };\n        const interpolate = prev.length\n          ? d3.interpolate(test, d)\n          : d3.interpolate(start, d);\n\n        return function (t) {\n          d = interpolate(t);\n\n          return arc(d);\n        };\n      })\n      .attr(\"fill\", function (d) {\n        return color(d.data.value.name);\n      })\n      .attr(\"stroke\", \"white\")\n      .style(\"stroke-width\", \"2px\");\n  }, [topFiveModelsCount]);\n\n  return (\n    <StyledDonutWrapper>\n      <p className=\"donut-heading\">{getMonthName(selectedMonth)}</p>\n      <div className=\"wrapper\">\n        <StyledSvgWrapper>\n          <svg viewBox=\"0 0 500 500\">\n            <g ref={ref} transform=\"translate(250,250)\"></g>\n          </svg>\n        </StyledSvgWrapper>\n        <div>\n          {topFiveModelsCount.map((model, index) => (\n            <StyledDonutLabel key={index}>\n              <StyledDonutLabelNumber\n                className=\"donut-label\"\n                style={{ backgroundColor: donutColors[index] }}\n              >\n                {model.value}\n              </StyledDonutLabelNumber>\n              <StyledDonutLabelText>{model.name}</StyledDonutLabelText>\n            </StyledDonutLabel>\n          ))}\n        </div>\n      </div>\n    </StyledDonutWrapper>\n  );\n};\n\nexport default DonutChart;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledInfo = styled.p`\n  text-align: center;\n  padding: 50px 25%;\n  font-size: 20px;\n  line-height: 1.5;\n  @media (max-width: 700px) {\n    padding: 30px;\n  }\n`;\n\ntype InfoProps = {\n  className?: string;\n};\n\nconst Info: FunctionComponent<InfoProps> = ({ children, className }) => {\n  return <StyledInfo className={className} key=\"test\">{children}</StyledInfo>;\n};\n\nexport default Info;\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport Info from \"./Info\";\nimport { modelUnify, yearDonutColors } from \"./../helpers\";\n\nimport styled from \"styled-components\";\n\nconst StyledDonutWrapper = styled.div`\n  display: flex;\n`;\n\nconst YearSummaryWrapper = styled.div`\n  flex: 0 1 50%;\n  padding-right: 30px;\n  margin-bottom: 100px;\n`;\n\nconst StyledSvgWrapper = styled.div`\n  max-width: 500px;\n  flex: auto;\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst StyledLegendWrapper = styled.div`\n  margin-top: 75px;\n  margin-left: 50px;\n  @media (max-width: 700px) {\n    margin-top: 30px;\n  }\n`;\n\nconst StyledDonutLabel = styled.p`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledDonutLabelText = styled.span``;\n\nconst StyledDonutLabelNumber = styled.span`\n  color: #fff;\n  text-align: center;\n  line-height: 35px;\n  display: inline-block;\n  width: 35px;\n  height: 35px;\n  vertical-align: middle;\n  margin-right: 10px;\n`;\n\nconst StyledInfo = styled(Info)`\n  padding-bottom: 0;\n  margin-bottom: 0;\n  margin-top: 100px;\n  padding: 30px;\n`;\n\nconst YearSummary = ({ data }) => {\n  const ref = useRef();\n\n  const reduceData = (data) =>\n    data.reduce((a, b) => {\n      return a + b.value;\n    }, 0);\n\n  const yearDataSum = data.map((el) => el.data).flat();\n\n  const modelsCountObject = yearDataSum\n    .map(\n      (el) =>\n        `${\n          el.attributes.marka === \"BMW I\" ? \"BMW\" : el.attributes.marka\n        } ${modelUnify(el.attributes.model)}`\n    )\n    .reduce((map, val) => {\n      map[val] = (map[val] || 0) + 1;\n      return map;\n    }, {});\n\n  const modelsCountArray = Object.keys(modelsCountObject)\n    .map((key) => {\n      return {\n        name: key,\n        value: modelsCountObject[key],\n      };\n    })\n    .sort((a, b) => b.value - a.value);\n\n  const topTenModelsCount = [\n    ...modelsCountArray.slice(0, 10),\n    { name: \"Pozostałe\", value: reduceData(modelsCountArray.slice(10)) },\n  ];\n\n  useEffect(() => {\n    const svgElement = d3.select(ref.current);\n\n    var radius = 200;\n\n    var color = d3\n      .scaleOrdinal()\n      .domain(topTenModelsCount.map((d) => d.name))\n      .range(yearDonutColors);\n\n    var pie = d3\n      .pie()\n      .value(function (d) {\n        return d.value.value;\n      })\n      .sort(null);\n    var data_ready = pie(d3.entries(topTenModelsCount));\n\n    // The arc generator\n    var arc = d3\n      .arc()\n      .innerRadius(0) // This is the size of the donut hole\n      .outerRadius(radius * 0.8);\n\n    const chart = svgElement\n      .append(\"g\")\n      .attr(\"transform\", \"translate(250,250)\");\n\n    chart\n      .selectAll(\"whatever\")\n      .data(data_ready)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", arc)\n      .attr(\"fill\", function (d) {\n        return color(d.data.value.name);\n      })\n      .attr(\"stroke\", \"white\")\n      .style(\"stroke-width\", \"2px\");\n  }, []);\n\n  return (\n    <YearSummaryWrapper>\n      <StyledInfo>\n        Top 10 nowych zerejestrowanych samochodów elektrycznych w 2020 roku\n        (styczeń-listopad)\n        <br />\n        {`W sumie - ${yearDataSum.length} samochodów`}\n      </StyledInfo>\n      <StyledDonutWrapper>\n        <StyledSvgWrapper>\n          <svg viewBox=\"0 0 500 500\" ref={ref} />\n        </StyledSvgWrapper>\n        <StyledLegendWrapper>\n          {topTenModelsCount.map((model, index) => (\n            <StyledDonutLabel key={index}>\n              <StyledDonutLabelNumber\n                className=\"donut-label\"\n                style={{ backgroundColor: yearDonutColors[index] }}\n              >\n                {index + 1}\n              </StyledDonutLabelNumber>\n              <StyledDonutLabelText>\n                {model.name} ({model.value})\n              </StyledDonutLabelText>\n            </StyledDonutLabel>\n          ))}\n        </StyledLegendWrapper>\n      </StyledDonutWrapper>\n    </YearSummaryWrapper>\n  );\n};\n\nexport default YearSummary;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"./../assets/logo.svg\";\n\nconst StyledHeader = styled.header`\n  padding: 10px 70px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  span {\n    margin-left: 20px;\n    cursor: pointer;\n  }\n\n  @media (max-width: 550px) {\n    padding: 10px 20px;\n  }\n`;\n\nconst StyledLogoWrapper = styled.header`\n  display: flex;\n  img {\n    width: 50px;\n    margin-right: 10px;\n\n    @media (max-width: 550px) {\n      width: 30px;\n    }\n  }\n\n  h1 {\n    @media (max-width: 550px) {\n      font-size: 20px;\n    }\n  }\n`;\n\ntype HeaderProps = {\n  handleModalToogle: (modaltype: string) => void;\n};\n\nconst Header = ({ handleModalToogle }: HeaderProps) => {\n  return (\n    <StyledHeader>\n      <StyledLogoWrapper>\n        <img src={logo} alt=\"\" />\n        <h1>autowolt</h1>\n      </StyledLogoWrapper>\n      <span>\n        <span onClick={() => handleModalToogle(\"infoModal\")}>Info</span>\n        <span onClick={() => handleModalToogle(\"contactModal\")}>Kontakt</span>\n      </span>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledModal = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalBgd = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(128, 128, 128, 0.9);\n`;\n\nconst CloseModal = styled.span`\n  position: absolute;\n  top: 5px;\n  right: 20px;\n  font-size: 30px;\n  cursor: pointer;\n  //transform: rotate(90deg);\n`;\n\nconst ModalContent = styled.div`\n  background-color: white;\n  border-radius: 5px;\n  padding: 30px;\n  position: relative;\n  min-width: 350px;\n  margin: 0 30px;\n  .code {\n    font-size: 14px;\n    background-color: rgba(128, 128, 128, 0.2);\n    padding: 2px 5px;\n    border-radius: 4px;\n  }\n`;\n\nconst infoModalContent = (\n  <>\n    <p>\n      Wszystkie dane pochodzą ze strony CEPiK (\n      <a href=\"http://www.cepik.gov.pl/interfejs-dla-cepik\">\n        http://www.cepik.gov.pl/interfejs-dla-cepik\n      </a>\n      )\n    </p>\n    <p>\n      Prezentowane dane dotyczą rejestracji samochodów nowych zakupionych w\n      kraju oraz importowanych. <br />W API SEPiK są to kategorie:{\" \"}\n      <span className=\"code\">NOWY ZAKUPIONY W KRAJU</span> oraz{\" \"}\n      <span className=\"code\">NOWY IMPORT INDYW</span>\n    </p>\n  </>\n);\n\nconst contactModalContent = (\n  <>\n    <p>\n      Kontakt:\n      <br />\n      <br />\n      email:{\" \"}\n      <a href=\"mailto:autowolt@protonmail.com\">autowolt@protonmail.com</a>\n      <br />\n      <br />\n      twitter: <a href=\"https://twitter.com/autowolt\">@autowolt</a>\n    </p>\n  </>\n);\n\ntype ModalProps = {\n  modalType: string;\n  closeModal: (modalType: string) => void;\n};\n\nconst Modal = ({ modalType, closeModal }: ModalProps) => {\n  return (\n    <StyledModal>\n      <ModalBgd onClick={() => closeModal(modalType)} />\n      <ModalContent>\n        <CloseModal onClick={() => closeModal(modalType)}>&times;</CloseModal>\n        {modalType === \"infoModal\" ? infoModalContent : contactModalContent}\n      </ModalContent>\n    </StyledModal>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\n\nimport YearBarChart from \"./components/YearBarChart\";\nimport DonutChart from \"./components/Donut\";\nimport YearSummary from \"./components/YearSummary\";\nimport Header from \"./components/Header\";\nimport Info from \"./components/Info\";\nimport Modal from \"./components/Modal\";\n\nimport DATA_2020 from \"./data2020.json\";\n\nimport { filterNewCars } from \"./helpers\";\nimport styled from \"styled-components\";\n\nconst StyledMain = styled.main`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  @media (max-width: 1250px) {\n    flex-direction: column;\n  }\n`;\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [dataLoaded, setdataLoaded] = useState(false);\n  const [selectedMonth, setselectedMonth] = useState(1);\n  const [modal, toogleModal] = useState({\n    showModal: false,\n    modalType: \"\",\n  });\n\n  const handleModalToogle = (modalType) => {\n    toogleModal({\n      showModal: !modal.showModal,\n      modalType: modalType,\n    });\n  };\n\n  useEffect(() => {\n    const filteredData = DATA_2020.map((month) => ({\n      ...month,\n      data: month.data.filter(filterNewCars),\n    }));\n    setData(filteredData);\n    setdataLoaded(true);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header handleModalToogle={handleModalToogle} />\n      <Info>Liczba rejestracji nowych samochodów elektrycznych w Polsce.</Info>\n      {modal.showModal && (\n        <Modal modalType={modal.modalType} closeModal={handleModalToogle} />\n      )}\n      {dataLoaded ? (\n        <>\n          <StyledMain>\n            <YearBarChart\n              data={data}\n              setselectedMonth={setselectedMonth}\n              selectedMonth={selectedMonth}\n            />\n            <DonutChart\n              data={\n                data.find(({ date }) => {\n                  return (\n                    date ===\n                    `data_${\n                      selectedMonth > 9 ? selectedMonth : `0${selectedMonth}`\n                    }_2020`\n                  );\n                }).data\n              }\n              selectedMonth={selectedMonth}\n            />\n          </StyledMain>\n          <StyledMain>\n            {dataLoaded ? <YearSummary data={data} /> : null}\n          </StyledMain>\n        </>\n      ) : (\n        <p>loading...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}